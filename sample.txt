const express = require("express");
const date = require(__dirname + "/date.js");
const mongoose = require("mongoose");

const app = express();

app.set("view engine", "ejs");
app.use(express.static("public"));
app.use(express.urlencoded({
  extended: true
}));

const port = process.env.PORT || 3000;

mongoose.connect("mongodb://localhost:27017/todoListDB");

const itemsSchema = {
  name: String
};

const Item = mongoose.model("Item", itemsSchema);

const item1 = new Item({
  name: "Welcome to ToDo List"
});
const item2 = new Item({
  name: "Type and hit + to add item"
});
const item3 = new Item({
  name: "<-- Check this to delete an item"
});
const itemsArray = [item1, item2, item3];



// Item.deleteMany({}, err => {
//   if (err) console.log(err);
//   else console.log("Deleted");
// });

const commonList = [];
const workList = [];

const today = new Date();

app.get("/", (req, res) => {
  const day = date.getDate();

  Item.find({}, (err, itemList) => {

    if (itemList.length === 0) {
      Item.insertMany(itemsArray, err => {
        if (err) console.log(err);
        else console.log("Items added successfully");
      });
      res.redirect("/");
    } else {
      res.render("list", {
        listTitle: day,
        itemList: itemList
      });
    }
  });

});

// app.get("/work", (req, res) => {
//   res.render("list", {
//     listTitle: "Work List",
//     itemList: workList
//   });
// });

app.get("/:customListName", (req, res) => {
  console.log(req.params.customListName);
});

app.post("/", (req, res) => {
  const itemName = req.body.newItem;
  const itemNew = Item({
    name: itemName
  });
  if (itemName != "") {
    itemNew.save();
    res.redirect("/");
  } else res.redirect("/");
});

app.post("/delete", (req, res) => {
  const itemToDelete = req.body.checkbox;
  Item.findByIdAndRemove(itemToDelete, err => {
    if (err) console.log(err);
    else console.log("Deleted");
  })
  res.redirect("/");
});

app.listen(port, () => console.log(`Server started at port ${port}`));
